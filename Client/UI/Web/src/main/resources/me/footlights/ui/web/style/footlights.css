@import url(http://fonts.googleapis.com/css?family=Abel|Gudea|Ubuntu+Mono);

html
{
	background: black;
	color: white;
	
	background-image: url('../images/seats.jpeg');
	background-repeat: no-repeat;
	background-position: bottom center;

	font-family: Gudea;
	font-weight: 400;
	margin: 0;
	padding: 0;
}

h1, h2 { color: #66f; }

h1
{
	background-image: url('../images/lighting.jpeg');
	padding: 0.5em;
}

#launcher
{
	position: fixed;
	left: 0;
	top: 6em;

	width: 8em;

	margin: 0;
	padding: .25em;

	background: #ccf;	
	border: 1px solid #66f;
	color: #333;
}

#status
{
	position: absolute;
	right: 0;
	top: 6em;

	width: 12em;

	margin: 0;
	padding: .25em;

	background: #ccf;
	border: 1px solid #66f;
	color: #333;
}

#status:before
{
	color: #66f;
	content: "Status";
	font-size: smaller;
	font-weight: bold;
	float: right;
}

#content
{
	position: absolute;
	top: 5em;

	margin-top: 0;
	margin-left: 9em;
	margin-right: 13em;
	padding: .25em;

	width: auto;

	color: #333;

	z-index: -1;
}


.timestamp
{
	color: #66f;
	font-size: smaller;
	display: block;
}


#mainframe
{
	height: 90%;
	width: 100%;
	margin: 0;
	padding: 0;
}

.sandboxlabel
{
	color: orange;
	font-family: monospace;
	font-size: smaller;
}

.sandbox
{
	background: #ffc;
	border: 1px solid orange;
	margin: .5em;
	padding: .5em;
	position: relative;
}

.sandbox:before
{
	content: 'This is a sandbox for untrusted ECMAScript';
	display: block;

	border-bottom: 1px solid orange;
	color: orange;
	font-size: smaller;
}

.placeholder
{
	background: orange;
}

h1.main
{
	float: right;
	font-size: 150%;
	margin-bottom: .25em;
}

a
{
	color: #339;
	font-family: Abel;
	text-decoration: none;
}

a:hover
{
	opacity: 0.5;
}

a:followed
{
	color: #339;
}

.console
{
	font-family: "Ubuntu Mono";

	/* For some reason, 50em translates to 80 columns, even through we use a fixed-width font... */
	width: 50em;

	background-color: black;
	color: grey;
}

.ajaxContext
{
	font-family: monospace;
	font-size: smaller;
	font-weight: bold;
}

.ajaxContext:before
{
	content: 'Ajax Context: "';
}

.ajaxContext:after
{
	content: '"';
}
